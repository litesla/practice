我们设：
	f[n]:n根鞋带围成一个环的组合数（情况）；
	sum[n]:n根鞋带所有的组合数；
	那么答案ans=f[n]/sum[n];
	
1. 首先，考虑f[n]：
    本题运用了一种插空的思想。设想，如果只有一根鞋带，当然就是自己头尾相连，f[1]=1，现在又加了一根鞋带呢？现在我们把第一根鞋带拆开，我们用(1-a)表示第一根鞋带，1和a是它头和尾，用(2-b)表示新加进去的第二根鞋带。那么第二根鞋带要想和第一根鞋带形成一个环就又两种情况：1：1连2，a连b；2:a连2,1连b；
    实际上，第二根鞋带如果想插入到第一根鞋带的圈中形成大圈是又有1个位置，而上面的两种情况实际上是每个位置又有正反两种插法，也就是：f[2]=f[1]*1*2。
    现在有三根鞋带：(1-a),(2-b),(3-c)，这三根鞋带形成一个环有f[3]种情况。现在，再加入一根鞋带(4-d)，这第四个鞋带在这种情况中有地方可以插？显而易见是3种，实际上有三个鞋带当然就有3个位置了！那么，这第四根鞋带在每个地方都有正反两个插法(4-d)和(d-4),这是在f[3]的其中一个情况中，那么f[3]种情况呢？四根鞋带围成一个环的组合数就应该是三根鞋带围成一个环的组合数乘上第四根鞋带在这三根鞋带中可以放的位置数再乘上再每个位置的正反两种插法：f[4]=f[3]*3*2。由此可以推出n根鞋带围成一个环的组合数的递推公式：f[n]=f[n-1]*(n-1)*2;
2.接下来，考虑sum[n]：
     这里如果我们知道sum[n-1]，sum[n]是多少？那么分为两种情况来考虑：
	1.当第n根鞋带自己头尾相连自己形成一个环的话，sum1[n]=sum[n-1];
	2.当第n根鞋带和前n-1根鞋带绑在一起的时候，在sum[n-1]种情况中，每种情况，n-1个鞋带我们只考虑n-1个头，如果另一半也考虑就重复了，而第n个鞋带有两个头，所以sum2[n]=sum[n-1]*2*(n-1)；
3.递推公式：
    sum[n]=sum1[n]+sum[2]=sum[n-1]+sum[n-1]*2*(n-1)=sum[n-1]*(2*n-1);因此地推公式为：ans=f[n]/sum[n]=f[n-1](n-1)*2/sum[n-1]*(2*n-1);
4.核心代码形成：
    递推公式中把f[n-1]和sum[n-1]提出来：ans = ( (n-1) * 2 / ( 2 * n - 1 ) ) * ( f [n - 1] / sum [n - 1] )，而f [n - 1] / sum [n - 1]就是也就是ans[n-1]。
5.核心代码：
	double ans=1;
    for (int i = 2; i <= n; i++) {
        ans * = (n - 1) * 2.0 / (2 * n - 1);
    }
